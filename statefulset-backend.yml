apiVersion: apps/v1
kind: StatefulSet 
metadata:
  namespace: backend
  name: minio
spec:
  selector:
    matchLabels:
      app: minio
  serviceName: "minio"
  replicas: 1
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: minio
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: minio
        image: bitnami/minio:2024.3.30
        env:
        - name: MINIO_ROOT_USER
          value: minioadmin
        - name: MINIO_ROOT_PASSWORD
          value: minioadmin
        ports:
        - containerPort: 9000
        - containerPort: 9001
          name: minio
        volumeMounts:
        - name: minio
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: minio
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 10Mi

---

apiVersion: apps/v1
kind: StatefulSet 
metadata:
  namespace: backend
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: "redis"
  replicas: 1
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: redis
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: redis
        image: redis/redis-stack:7.2.0-v10
        env:
        - name: REDIS_HOST
          value: redis
        ports:
        - containerPort: 6379
        - containerPort: 8001
          name: redis
        volumeMounts:
        - name: redis
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: redis
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 10Mi

---

apiVersion: apps/v1
kind: StatefulSet 
metadata:
  namespace: backend
  name: rabbitmq
spec:
  selector:
    matchLabels:
      app: rabbitmq
  serviceName: "rabbitmq"
  replicas: 1
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: rabbitmq
        image: rabbitmq:3.12.13-management
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: admin
        - name: RABBITMQ_DEFAULT_PASS
          value: admin
        ports:
        - containerPort: 15672
        - containerPort: 5672
          name: rabbitmq
        volumeMounts:
        - name: rabbitmq
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 10Mi